plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExtensions
}

dependencies {
    implementation(project(':store-domain'))
    implementation(project(':store-common'))

    //
    implementation(project(':store-infrastructure:store-jpa'))
    implementation(project(':store-infrastructure:store-redis'))

    // testFixture
    testImplementation testFixtures(project(':store-domain'))

    //
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'


    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-circuitbreaker-resilience4j', version: '3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'

}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'src/main/resources/static/docs'
    }
}